// <auto-generated />
using System;
using CapaDatos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CapaDatos.Migrations
{
    [DbContext(typeof(TiendaContext))]
    [Migration("20240417102154_InitDB")]
    partial class InitDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CapaDatos.Entidades.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("Direccion")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Telefono")
                        .HasColumnType("VARCHAR(10)");

                    b.HasKey("IdCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("CapaDatos.Entidades.DetalleXFactura", b =>
                {
                    b.Property<int>("IdDetalleXFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleXFactura"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("NroFactura")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<decimal>("Total")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.HasKey("IdDetalleXFactura");

                    b.HasIndex("IdProducto");

                    b.HasIndex("NroFactura");

                    b.ToTable("DetalleXFacturas");
                });

            modelBuilder.Entity("CapaDatos.Entidades.Factura", b =>
                {
                    b.Property<int>("NroFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NroFactura"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdMesero")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("IdSupervisor")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("NroMesa")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.HasKey("NroFactura");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdMesero");

                    b.HasIndex("IdSupervisor");

                    b.HasIndex("NroMesa");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("CapaDatos.Entidades.Mesa", b =>
                {
                    b.Property<int>("NroMesa")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("Puestos")
                        .HasColumnType("int");

                    b.Property<bool>("Reservada")
                        .HasColumnType("bit");

                    b.HasKey("NroMesa");

                    b.ToTable("Mesas");
                });

            modelBuilder.Entity("CapaDatos.Entidades.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<decimal>("Precio")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.HasKey("IdProducto");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("CapaDatos.Entidades.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CapaDatos.Entidades.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<int>("Antiguedad")
                        .HasColumnType("int");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdRol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("CapaDatos.Entidades.DetalleXFactura", b =>
                {
                    b.HasOne("CapaDatos.Entidades.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CapaDatos.Entidades.Factura", "Factura")
                        .WithMany("DetalleXFacturas")
                        .HasForeignKey("NroFactura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factura");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("CapaDatos.Entidades.Factura", b =>
                {
                    b.HasOne("CapaDatos.Entidades.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CapaDatos.Entidades.Usuario", "Mesero")
                        .WithMany()
                        .HasForeignKey("IdMesero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CapaDatos.Entidades.Usuario", "Supervisor")
                        .WithMany()
                        .HasForeignKey("IdSupervisor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CapaDatos.Entidades.Mesa", "Mesa")
                        .WithMany()
                        .HasForeignKey("NroMesa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Mesa");

                    b.Navigation("Mesero");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("CapaDatos.Entidades.Usuario", b =>
                {
                    b.HasOne("CapaDatos.Entidades.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("CapaDatos.Entidades.Factura", b =>
                {
                    b.Navigation("DetalleXFacturas");
                });
#pragma warning restore 612, 618
        }
    }
}
